"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/_app",{

/***/ "./src/services/moviesService.ts":
/*!***************************************!*\
  !*** ./src/services/moviesService.ts ***!
  \***************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\nclass MoviesService {\n    _transcriptFilm(movie) {\n        return {\n            id: movie.id,\n            title: movie.title,\n            genres_ids: movie.genre_ids,\n            description: movie.overview,\n            rate: movie.vote_average,\n            poster: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            miniPoster: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            backdrop: this._imgPath + movie.backdrop_path\n        };\n    }\n    _transcriptFilmDetails(movie) {\n        return {\n            id: movie.id,\n            title: movie.title,\n            tagline: movie.tagline,\n            genres: movie.genres,\n            description: movie.overview,\n            rate: movie.vote_average,\n            poster: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            miniPoster: \"https://image.tmdb.org/t/p/w500\" + movie.poster_path,\n            backdrop: this._imgPath + movie.backdrop_path,\n            budget: movie.budget,\n            countries: movie.production_countries,\n            release: movie.release_date,\n            runtime: movie.runtime\n        };\n    }\n    _transcriptFilmTrailer(movie) {\n        return {\n            id: movie.id,\n            youtubeKey: movie.key,\n            type: movie.type,\n            name: movie.name\n        };\n    }\n    _transcriptMovieActors(actor) {\n        return {\n            id: actor.id,\n            name: actor.name\n        };\n    }\n    constructor(){\n        var _this = this;\n        this._apiKey = \"efa6474dd16a64f01e1c0ea678996de6\";\n        this._apiBase = \"https://api.themoviedb.org/3/\";\n        this._imgPath = \"https://image.tmdb.org/t/p/original/\";\n        this.getResource = async (url)=>{\n            let result = await fetch(url);\n            if (!result.ok) {\n                console.error(\"Something went wrong with API call\");\n            }\n            return await result.json();\n        };\n        this.getPopular = async (page)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/popular?api_key=\").concat(this._apiKey, \"&language=en-US&page=\").concat(page));\n            return res.results.map((movie)=>this._transcriptFilm(movie));\n        };\n        this.getNowPlaying = async (region)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/now_playing?api_key=\").concat(this._apiKey, \"&language=en-US&page=\", 1, \"&region=\").concat(region));\n            return res.results.map((movie)=>this._transcriptFilm(movie));\n        };\n        this.getUpcoming = async (page)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/upcoming?api_key=\").concat(this._apiKey, \"&language=en-US&page=\").concat(page));\n            return res.results.map((movie)=>this._transcriptFilm(movie));\n        };\n        this.getDetails = async (id)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/\").concat(id, \"?api_key=\").concat(this._apiKey, \"&language=en-US\"));\n            return this._transcriptFilmDetails(res);\n        };\n        this.getTrailer = async (id)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/\").concat(id, \"/videos?api_key=\").concat(this._apiKey, \"&language=en-US\"));\n            return res.results.map((movie)=>this._transcriptFilmTrailer(movie));\n        };\n        this.getTopRated = async (page)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/top_rated?api_key=\").concat(this._apiKey, \"&language=en-US&page=\").concat(page));\n            return res.results.map((movie)=>this._transcriptFilm(movie));\n        };\n        this.getSimilar = async (id)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/\").concat(id, \"/similar?api_key=\").concat(this._apiKey, \"&language=en-US&page=1\"));\n            // console.log(res)\n            return res.results.map((movie)=>this._transcriptFilm(movie));\n        };\n        this.getMovieActors = async (id)=>{\n            const res = await this.getResource(\"\".concat(this._apiBase, \"/movie/\").concat(id, \"/credits?api_key=\").concat(this._apiKey, \"&language=en-US\"));\n            return res.cast.map((actor)=>this._transcriptMovieActors(actor));\n        };\n        this.searchMovies = async function() {\n            let query = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : \"\";\n            const res = await _this.getResource(\"\".concat(_this._apiBase, \"search/movie?api_key=\").concat(_this._apiKey, \"&query=\").concat(query, \"&language=en-US\"));\n            return res.results.map((movie)=>_this._transcriptFilmDetails(movie));\n        };\n    }\n}\n/* harmony default export */ __webpack_exports__[\"default\"] = (MoviesService);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./src/services/moviesService.ts\n"));

/***/ })

});